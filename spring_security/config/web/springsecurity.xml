<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
           
           <!-- 1.配置哪些不需要经过spring安全的页面     使用http标签  -->
           <http pattern="/login.jsp" security="none"/>
           
           <!-- 设置 auto-config 自动配置过滤器    --> 
           <http auto-config="true" use-expressions="true">
           <form-login login-page="/login.jsp" login-processing-url="/login.action"
           username-parameter="username" password-parameter="password"
           authentication-failure-url="/login.jsp" />
           
           <!-- 设置有没有权限访问的页面，也就是403页面 -->
           <access-denied-handler error-page="/loginfailure.jsp" />
           
           <!-- 定义角色和页面之间的关系，也就是说哪些页面可以访问，如果没有访问权限，提示403 -->
           <intercept-url  pattern="/index.jsp" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_BUSINESS')"/>
		   <intercept-url  pattern="/business.jsp" access="hasRole('ROLE_BUSINESS') or hasRole('ROLE_USER')"/>
		   <intercept-url  pattern="/main.jsp" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
		   <intercept-url  pattern="/manage.jsp" access="hasRole('ROLE_BUSINESS')"/>
		   <intercept-url  pattern="/loginfailure.jsp" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_BUSINESS')"/>
           </http>
           
          <!-- 认证管理， 获取用户具有的角色，需要自己编写service来实现，service需要实现UserDetailsService这个接口 -->
          <authentication-manager>
          	<authentication-provider user-service-ref="authUserInfoService"></authentication-provider>
          </authentication-manager>
</beans:beans>